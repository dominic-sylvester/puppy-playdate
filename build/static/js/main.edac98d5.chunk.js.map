{"version":3,"sources":["graphQLUtils.js","WelcomeScreen.js","PuppyCard.js","SwipeButtons.js","ResultsScreen.js","TinderSwipe.js","App.js","serviceWorker.js","index.js"],"names":["fetchGraphQL","operationsDoc","operationName","variables","a","fetch","method","headers","body","JSON","stringify","query","result","json","useStyles","makeStyles","theme","root","width","spacing","maxWidth","margin","button","marginTop","WelcomeScreen","handleGetStartedClick","classes","className","Button","variant","color","onClick","textAlign","height","boxShadow","display","flexDirection","media","sideBySideContainer","justifyContent","previouslyMatched","fontStyle","bio","marginBottom","PuppyCard","puppy","Card","CardMedia","image","process","profilePic","title","name","CardContent","Typography","gutterBottom","component","age","matchedCount","interests","join","swipeButtonsContainer","alignItems","padding","SwipeButtons","swipe","Tooltip","aria-label","arrow","Fab","sorry","puppyCard","resetButton","ResultsScreen","likedPuppies","resetTinderApp","matchedPuppy","Math","floor","random","length","cardContainer","position","swipeCard","TinderSwipe","puppyData","fetchPuppyData","childRefs","useMemo","Array","fill","map","i","React","createRef","puppyIdsAlreadyRemoved","useRef","useState","swipeCount","setSwipeCount","setLikedPuppies","handleMatchedCountChange","puppyId","id","newMatchedCountValue","updatePuppyMatchedCountOperationsDoc","errors","console","error","index","key","onSwipe","dir","direction","current","push","swiped","ref","remainingPuppies","filter","includes","puppyIdToBeRemoved","puppyIdToBeRemovedIndex","indexOf","header","headerText","paddingLeft","paddingRight","App","setPuppyData","showWelcomeScreen","setShowWelcomeScreen","useCallback","data","queryPuppy","sort","puppyA","puppyB","useEffect","Container","loadingContainer","CircularProgress","size","loadingText","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.edac98d5.chunk.js","sourcesContent":["// Main generic GraphQL request\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\n  const result = await fetch(\n    'https://puppy-playdate.us-west-2.aws.cloud.dgraph.io/graphql',\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: operationsDoc,\n        operationName,\n        variables,\n      }),\n    }\n  )\n\n  return await result.json()\n}\n\n// Fetch all puppies\nconst fetchAllPuppiesOperationsDoc = `\n  query FetchAllPuppies {\n    queryPuppy {\n      id\n      name\n      age\n      matchedCount\n      profilePic\n      bio\n      interests\n    }\n  }\n`\n\nexport function fetchAllPuppies() {\n  return fetchGraphQL(fetchAllPuppiesOperationsDoc, 'FetchAllPuppies', {})\n}\n\n// Update the puppy matched count\nconst updatePuppyMatchedCountOperationsDoc = (\n  puppyId,\n  newMatchedCountValue\n) => `\n  mutation UpdatePuppyMatchedCount {\n    updatePuppy(input: { filter: { id: [\"${puppyId}\"] }, set: { matchedCount: ${newMatchedCountValue} } }) {\n      puppy {\n        id\n        name\n        age\n        matchedCount\n        profilePic\n        bio\n        interests\n      }\n    }\n  }\n`\n\nexport function updatePuppyMatchedCount(puppyId, newMatchedCountValue) {\n  return fetchGraphQL(\n    updatePuppyMatchedCountOperationsDoc(puppyId, newMatchedCountValue),\n    'UpdatePuppyMatchedCount',\n    {}\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: theme.spacing(50),\n    maxWidth: '100%',\n    margin: 'auto',\n  },\n  button: {\n    marginTop: theme.spacing(4),\n  },\n}))\n\nexport const WelcomeScreen = ({ handleGetStartedClick }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <p>\n        Every dog owner wants to find the perfect friends for their new puppy.\n        Now we have an app for that!\n      </p>\n      <p>\n        Browse through various puppy profiles and swipe right or left to find\n        your new puppy friend.\n      </p>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n        onClick={handleGetStartedClick}\n      >\n        Get Started\n      </Button>\n    </div>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: '100%',\n    textAlign: 'left',\n    height: theme.spacing(80),\n    boxShadow: 'rgba(50, 50, 50, 0.08) 6px 8px 10px -3px',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  media: {\n    height: theme.spacing(50),\n  },\n  sideBySideContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  previouslyMatched: {\n    fontStyle: 'italic',\n  },\n  bio: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nexport function PuppyCard({ puppy }) {\n  const classes = useStyles()\n\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        className={classes.media}\n        image={`${process.env.PUBLIC_URL}/${puppy.profilePic}`}\n        title={puppy.name}\n      />\n      <CardContent>\n        <div className={classes.sideBySideContainer}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {puppy.name}, {puppy.age}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n            className={classes.previouslyMatched}\n          >\n            Previously matched {puppy.matchedCount}{' '}\n            {puppy.matchedCount === 1 ? 'time' : 'times'}\n          </Typography>\n        </div>\n        <Typography\n          variant=\"body1\"\n          color=\"textSecondary\"\n          component=\"p\"\n          className={classes.bio}\n        >\n          {puppy.bio}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          <b>Interests:</b> {puppy.interests?.join(', ')}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Fab from '@material-ui/core/Fab'\n\nconst useStyles = makeStyles((theme) => ({\n  swipeButtonsContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'flex-end',\n    width: '100%',\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n}))\n\nexport const SwipeButtons = ({ swipe }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.swipeButtonsContainer}>\n      <Tooltip title=\"No thanks...\" aria-label=\"No thanks...\" arrow>\n        <Fab\n          aria-label=\"No thanks...\"\n          color=\"secondary\"\n          onClick={() => swipe('left')}\n        >\n          <CloseIcon />\n        </Fab>\n      </Tooltip>\n      <Tooltip title=\"Yes!\" aria-label=\"Yes!\" arrow>\n        <Fab aria-label=\"Yes!\" color=\"primary\" onClick={() => swipe('right')}>\n          <FavoriteIcon />\n        </Fab>\n      </Tooltip>\n    </div>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport { PuppyCard } from './PuppyCard'\n\nconst useStyles = makeStyles((theme) => ({\n  sorry: {\n    marginBottom: theme.spacing(4),\n  },\n  puppyCard: {\n    width: theme.spacing(75),\n    maxWidth: '100%',\n    margin: 'auto',\n    marginTop: theme.spacing(4),\n  },\n  resetButton: {\n    marginTop: theme.spacing(4),\n  },\n}))\n\nexport const ResultsScreen = ({ likedPuppies, resetTinderApp }) => {\n  const classes = useStyles()\n\n  const matchedPuppy =\n    likedPuppies[Math.floor(Math.random() * likedPuppies.length)]\n\n  return (\n    <>\n      {matchedPuppy ? (\n        <>\n          <Typography gutterBottom variant=\"h4\" component=\"h2\">\n            Congratulations! You matched with...\n          </Typography>\n          <div className={classes.puppyCard}>\n            <PuppyCard puppy={matchedPuppy} />\n          </div>\n        </>\n      ) : (\n        <>\n          <Typography\n            gutterBottom\n            variant=\"h4\"\n            component=\"h2\"\n            className={classes.sorry}\n          >\n            Sorry...\n          </Typography>\n          <Typography gutterBottom variant=\"body1\" component=\"p\">\n            No one wanted to play with you.\n          </Typography>\n        </>\n      )}\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.resetButton}\n        onClick={resetTinderApp}\n      >\n        Start Over\n      </Button>\n    </>\n  )\n}\n","import React, { useMemo, useRef, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TinderCard from 'react-tinder-card'\n\nimport { PuppyCard } from './PuppyCard'\nimport { SwipeButtons } from './SwipeButtons'\nimport { ResultsScreen } from './ResultsScreen'\nimport { updatePuppyMatchedCount } from './graphQLUtils'\n\nconst useStyles = makeStyles((theme) => ({\n  cardContainer: {\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    margin: 'auto',\n    width: theme.spacing(75),\n    maxWidth: '100%',\n    height: theme.spacing(80),\n  },\n  swipeCard: {\n    position: 'absolute',\n    width: theme.spacing(75),\n    maxWidth: '100%',\n    height: theme.spacing(80),\n  },\n}))\n\nexport const TinderSwipe = ({ puppyData, fetchPuppyData }) => {\n  const classes = useStyles()\n\n  const childRefs = useMemo(\n    () =>\n      Array(puppyData.length)\n        .fill(0)\n        .map((i) => React.createRef()),\n    [puppyData.length]\n  )\n\n  const puppyIdsAlreadyRemoved = useRef([])\n\n  const [swipeCount, setSwipeCount] = useState(0)\n  const [likedPuppies, setLikedPuppies] = useState([])\n\n  const handleMatchedCountChange = async (puppy) => {\n    const { errors } = await updatePuppyMatchedCount(\n      puppy.id,\n      puppy.matchedCount + 1\n    )\n\n    if (errors) {\n      console.error(errors)\n    }\n  }\n\n  const swiped = (direction, puppy) => {\n    puppyIdsAlreadyRemoved.current &&\n      puppyIdsAlreadyRemoved.current.push(puppy.id)\n\n    if (direction === 'right') {\n      setLikedPuppies([...likedPuppies, puppy])\n      handleMatchedCountChange(puppy)\n    }\n\n    setSwipeCount((swipeCount) => swipeCount + 1)\n  }\n\n  const swipe = (dir) => {\n    const remainingPuppies = puppyData.filter(\n      (puppy) =>\n        !puppyIdsAlreadyRemoved.current ||\n        !puppyIdsAlreadyRemoved.current?.includes(puppy.id)\n    )\n    if (remainingPuppies.length) {\n      const puppyIdToBeRemoved =\n        remainingPuppies[remainingPuppies.length - 1].id\n      const puppyIdToBeRemovedIndex = puppyData\n        .map((puppy) => puppy.id)\n        .indexOf(puppyIdToBeRemoved)\n      childRefs[puppyIdToBeRemovedIndex].current.swipe(dir)\n    }\n  }\n\n  const resetTinderApp = () => {\n    puppyIdsAlreadyRemoved.current = []\n    fetchPuppyData()\n    setSwipeCount(0)\n    setLikedPuppies([])\n  }\n\n  return swipeCount < puppyData.length ? (\n    <div className={classes.cardContainer}>\n      {puppyData.map((puppy, index) => (\n        <TinderCard\n          className={classes.swipeCard}\n          key={puppy.id}\n          onSwipe={(dir) => swiped(dir, puppy)}\n          ref={childRefs[index]}\n        >\n          <PuppyCard puppy={puppy} />\n        </TinderCard>\n      ))}\n      <SwipeButtons swipe={swipe} />\n    </div>\n  ) : (\n    <ResultsScreen\n      likedPuppies={likedPuppies}\n      resetTinderApp={resetTinderApp}\n    />\n  )\n}\n","import React from 'react'\nimport Container from '@material-ui/core/Container'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport PetsIcon from '@material-ui/icons/Pets'\n\nimport { fetchAllPuppies } from './graphQLUtils'\nimport { WelcomeScreen } from './WelcomeScreen'\nimport { TinderSwipe } from './TinderSwipe'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: 'center',\n    color: '#FFF',\n  },\n  header: {\n    marginTop: theme.spacing(6),\n    marginBottom: theme.spacing(6),\n  },\n  headerText: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n}))\n\nexport default function App() {\n  const classes = useStyles()\n  const [puppyData, setPuppyData] = React.useState(null)\n  const [showWelcomeScreen, setShowWelcomeScreen] = React.useState(true)\n\n  const fetchPuppyData = React.useCallback(async () => {\n    const { errors, data } = await fetchAllPuppies()\n\n    if (errors) {\n      console.error(errors)\n    }\n\n    const result = data.queryPuppy.sort((puppyA, puppyB) =>\n      puppyA.name > puppyB.name ? -1 : 1\n    )\n\n    setPuppyData(result)\n  }, [])\n\n  React.useEffect(() => {\n    fetchPuppyData()\n  }, [fetchPuppyData])\n\n  return (\n    <main className={classes.root}>\n      <Container>\n        <h1 className={classes.header}>\n          <PetsIcon />\n          <span className={classes.headerText}>Puppy Playdate</span>\n          <PetsIcon />\n        </h1>\n        {showWelcomeScreen ? (\n          <WelcomeScreen\n            handleGetStartedClick={() => setShowWelcomeScreen(false)}\n          />\n        ) : puppyData ? (\n          <TinderSwipe puppyData={puppyData} fetchPuppyData={fetchPuppyData} />\n        ) : (\n          <div className={classes.loadingContainer}>\n            <CircularProgress color=\"inherit\" size={60} />\n            <Typography className={classes.loadingText}>\n              Fetching Puppies\n            </Typography>\n          </div>\n        )}\n      </Container>\n    </main>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}